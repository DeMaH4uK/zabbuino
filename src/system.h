#ifndef _ZABBUINO_SYSTEM_H_
#define _ZABBUINO_SYSTEM_H_

#include <Arduino.h>
#include <avr/boot.h>
#include <util/atomic.h>
#include "../basic.h"
#include "tune.h"
#include "service.h"

/*****************************************************************************************************************************
*
*  Read bytes from the MCU's Signature Row to buffer 
*
*   Returns: 
*     - none
*
*****************************************************************************************************************************/
void getBootSignatureBytes(char* _dst, uint8_t _startByte, uint8_t _len, uint8_t _step);

/*****************************************************************************************************************************
*
*  Init Timer1 
*
*   Returns: 
*     - always true at this time
*
*****************************************************************************************************************************/
extern uint8_t initTimerOne(const uint16_t _milliseconds);

/*****************************************************************************************************************************
*
*  Start Timer1
*
*   Returns: 
*     - none
*
*****************************************************************************************************************************/
extern void startTimerOne(void);


/*****************************************************************************************************************************
*
*  Handle Timer1 interrupt 
*
*   Returns: 
*     - none
*
*****************************************************************************************************************************/
ISR(TIMER1_COMPA_vect);

/*****************************************************************************************************************************
*
*  Stop Timer1
*
*   Returns: 
*     - none
*
*****************************************************************************************************************************/
extern void stopTimerOne(void);

/*****************************************************************************************************************************
*
*  Gather internal metrics and save it to global variable
*
*   Returns: 
*     - none
*
*****************************************************************************************************************************/
extern void gatherSystemMetrics(void);

#endif // #ifndef _ZABBUINO_SYSTEM_H_